<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerStartWork.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>